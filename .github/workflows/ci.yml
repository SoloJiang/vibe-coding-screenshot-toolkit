name: CI

on:
  push:
    branches: [ main, '*' ]
  pull_request:
    branches: [ main, '*' ]

permissions:
  contents: read
  checks: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: Build & Test
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Show rustc version
        run: rustc -Vv

      - name: Build (all targets) - Windows
        if: runner.os == 'Windows'
        run: cargo build --workspace --locked --exclude platform_mac --exclude api_cli

      - name: Build (all targets) - macOS
        if: runner.os == 'macOS'
        run: cargo build --workspace --all-targets --all-features --locked

      - name: Run tests - Windows
        if: runner.os == 'Windows'
        run: cargo test --workspace --locked --no-fail-fast --exclude platform_mac --exclude api_cli

      - name: Run tests - macOS
        if: runner.os == 'macOS'
        run: cargo test --workspace --all-features --locked --no-fail-fast

      - name: Doc build (no deploy) - Windows
        if: runner.os == 'Windows'
        run: cargo doc --workspace --no-deps --locked --exclude platform_mac --exclude api_cli

      - name: Doc build (no deploy) - macOS
        if: runner.os == 'macOS'
        run: cargo doc --workspace --no-deps --locked

  lint:
    name: Format & Clippy
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust toolchain (clippy, rustfmt)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Clippy - Windows
        if: runner.os == 'Windows'
        run: cargo clippy --workspace --all-features --exclude platform_mac --exclude api_cli

      - name: Clippy - macOS
        if: runner.os == 'macOS'
        run: cargo clippy --workspace --all-features

  minimal:
    name: Minimal features compile
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - uses: dtolnay/rust-toolchain@stable
      - name: Build default feature set
        run: cargo build --workspace --locked
